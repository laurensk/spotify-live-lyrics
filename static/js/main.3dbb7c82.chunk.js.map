{"version":3,"sources":["utils/AuthUtils.ts","api/LyricsService.ts","api/SpotifyService.ts","assets/cover.png","components/Container.tsx","utils/SongUtils.ts","pages/Player.tsx","components/CustomButton.tsx","components/Header.tsx","components/LargeText.tsx","pages/Welcome.tsx","App.tsx","index.tsx"],"names":["AuthUtils","token","localStorage","setItem","getItem","removeItem","window","location","href","split","length","setTimeout","reload","LyricsService","title","artist","this","lyricsRequest","count","console","log","headers","Authorization","axios","post","res","status","data","search","toLowerCase","replace","trim","encodeURI","SpotifyService","getTokenFromUrl","setToken","toString","container","process","join","open","get","getToken","response","removeToken","Container","className","props","children","React","Component","SongUtils","artists","pretty","name","substr","Player","updateInterval","state","song","lyrics","image","getCurrentSong","setInterval","clearInterval","a","lastSong","setState","item","album","images","url","getLyrics","getArtists","openLyrics","Helmet","style","display","flexDirection","src","cover","alt","CustomButton","onClick","e","Header","LargeText","fontWeight","text","Welcome","login","App","auth","getAuth","onLoad","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3dbb7c82.chunk.js","sourcesContent":["export class AuthUtils {\n  public static setToken(token: string) {\n    localStorage.setItem(\"token\", token);\n  }\n\n  public static getToken() {\n    const token = localStorage.getItem(\"token\");\n    return token ? token : null;\n  }\n\n  public static removeToken() {\n    return localStorage.removeItem(\"token\");\n  }\n\n  public static reload() {\n    if (window.location.href.split(\"#\").length <= 2) window.location.href = window.location.href.split(\"#\")[0];\n    setTimeout(() => window.location.reload(), 10);\n  }\n}\n","import axios from \"axios\";\n\nexport class LyricsService {\n  public static async getLyrics(title: string, artist: string) {\n    return await this.lyricsRequest(title, artist, 0);\n  }\n\n  private static async lyricsRequest(title: string, artist: string, count: number): Promise<string | null> {\n    console.log(\"getting lyrics!\");\n    if (count > 4) return null;\n\n    const headers = { Authorization: \"Bearer b6fbac76-2ac3-4187-a662-7d9a3f67b346\" };\n    const endpoint = \"https://lyrics.prod.laurensk.at/lyrics\";\n\n    try {\n      const res = await axios.post(endpoint, { title: title, artist: artist }, { headers: headers });\n      return res.status === 200 ? res.data : this.lyricsRequest(title, artist, count + 1);\n    } catch {\n      return this.lyricsRequest(title, artist, count + 1);\n    }\n  }\n\n  public static openLyrics(title: string, artist: string) {\n    const search = `${title} ${artist}`\n      .toLowerCase()\n      .replace(/ *\\([^)]*\\) */g, \"\")\n      .replace(/ *\\[[^\\]]*]/, \"\")\n      .replace(/feat.|ft./g, \"\")\n      .replace(/\\s+/g, \" \")\n      .trim();\n\n    const urlSearch = encodeURI(search);\n\n    return \"https://genius.com/search?q=\" + urlSearch;\n  }\n}\n","import axios from \"axios\";\nimport { AuthUtils } from \"../utils/AuthUtils\";\n\nexport class SpotifyService {\n  public static async onLoad() {\n    const token = this.getTokenFromUrl();\n    console.log(token);\n    if (token) {\n      AuthUtils.setToken(token.toString());\n      AuthUtils.reload();\n    }\n  }\n\n  private static getTokenFromUrl() {\n    const href = window.location.href;\n    const container = href.split(\"access_token=\");\n    if (container.length < 2) return false;\n    const token = container[1].split(\"&\");\n    if (token.length < 1) return false;\n    return token[0];\n  }\n\n  public static login() {\n    const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\n    const scopes = [\"user-read-currently-playing\"];\n\n    const clientId = process.env.REACT_APP_SPOTIFY_CLIENT_ID;\n    const redirectUri = process.env.REACT_APP_REDIRECT_URI;\n    const href = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n      \"%20\"\n    )}&response_type=token`;\n\n    window.open(href, \"_self\");\n  }\n\n  public static async getCurrentSong() {\n    try {\n      const res = await axios.get(\"https://api.spotify.com/v1/me/player/currently-playing\", {\n        headers: { Authorization: \"Bearer \" + AuthUtils.getToken() },\n      });\n      return res.data;\n    } catch (e) {\n      if (e.response.status) {\n        if (e.response.status === 401) {\n          AuthUtils.removeToken();\n          AuthUtils.reload();\n        }\n      }\n    }\n  }\n}\n","export default __webpack_public_path__ + \"static/media/cover.95a561cb.png\";","import React from \"react\";\nimport \"./Container.css\";\n\ninterface PropsType {\n  children: any;\n}\n\nclass Container extends React.Component<PropsType, any> {\n  render() {\n    return (\n      <div className=\"sll-container\">\n        <div className=\"sll-container-children\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n\nexport default Container;\n","export class SongUtils {\n  public static getArtists(artists: any) {\n    let pretty = \"\";\n    for (const artist of artists) pretty += artist.name + \", \";\n    return pretty.substr(0, pretty.length - 2);\n  }\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { LyricsService } from \"../api/LyricsService\";\nimport { SpotifyService } from \"../api/SpotifyService\";\nimport cover from \"../assets/cover.png\";\nimport Container from \"../components/Container\";\nimport { SongUtils } from \"../utils/SongUtils\";\nimport \"./Player.css\";\n\ninterface StateType {\n  song: any | null;\n  lyrics: any | null;\n  image: string | null;\n}\n\nclass Player extends React.Component<any, StateType> {\n  updateInterval: any;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      song: null,\n      lyrics: null,\n      image: null,\n    };\n  }\n\n  componentDidMount() {\n    this.getCurrentSong();\n    this.updateInterval = setInterval(() => this.getCurrentSong(), 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.updateInterval);\n  }\n\n  async getCurrentSong() {\n    const lastSong = this.state.song;\n    const song = await SpotifyService.getCurrentSong();\n    if (song) {\n      this.setState({ song: song });\n\n      try {\n        this.setState({ image: song.item.album.images[0].url });\n      } catch {\n        this.setState({ image: null });\n      }\n\n      if (lastSong == null || lastSong.item.name !== song.item.name) {\n        this.setState({ lyrics: \"\\nLoading lyrics...\" });\n        const lyrics = await LyricsService.getLyrics(\n          this.state.song.item.name,\n          SongUtils.getArtists(this.state.song.item.artists)\n        );\n        if (lyrics) this.setState({ lyrics: \"\\n\" + lyrics.trim() });\n        else this.setState({ lyrics: \"\\nError loading lyrics...\" });\n      }\n    } else {\n      this.setState({ song: null });\n    }\n  }\n\n  openLyrics() {\n    window.open(\n      LyricsService.openLyrics(this.state.song.item.name, SongUtils.getArtists(this.state.song.item.artists)),\n      \"_blank\"\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"sll-player-background\">\n        <Helmet>\n          <style>{`body {${\n            this.state.image\n              ? `background-color: initial; background-image: url(${this.state.image}), linear-gradient(rgba(24,24,24,0.5),rgba(24,24,24,0.5));`\n              : \"\"\n          }}`}</style>\n        </Helmet>\n        <Container>\n          {!this.state.song && (\n            <div>\n              <p>its silent</p>\n            </div>\n          )}\n\n          {this.state.song && (\n            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n              <div className=\"sll-player-meta\">\n                <img\n                  className=\"sll-player-cover\"\n                  src={this.state.image ?? cover}\n                  alt={SongUtils.getArtists(this.state.song.item.artists) + \" - \" + this.state.song.item.name}\n                />\n                <div className=\"sll-player-song\">\n                  <p className=\"sll-player-title\">{this.state.song.item.name}</p>\n                  <p className=\"sll-player-artist\">{SongUtils.getArtists(this.state.song.item.artists)}</p>\n                </div>\n              </div>\n              <div className=\"sll-player-lyrics\">{this.state.lyrics}</div>\n            </div>\n          )}\n\n          {/* <Header title={this.state.song ? this.state.song.item.name : \"It's silent...\"} />\n          {this.state.song && (\n            <div style={{ marginTop: -15 }}>\n              <LargeText text={SongUtils.getArtists(this.state.song.item.artists)} />\n              <br />\n              <LargeText text={this.state.lyrics} />\n              <CustomButton\n                style={{ marginTop: 40, marginBottom: 70 }}\n                title=\"Open Lyrics on Genius\"\n                onClick={() => this.openLyrics()}\n              />\n            </div>\n          )} */}\n        </Container>\n      </div>\n    );\n  }\n\n  // render() {\n  //   return (\n  //     <Container>\n  //       <Header title={this.state.song ? this.state.song.item.name : \"It's silent...\"} />\n  //       {this.state.song && (\n  //         <div style={{ marginTop: -15 }}>\n  //           <LargeText text={SongUtils.getArtists(this.state.song.item.artists)} />\n  //           <br />\n  //           <LargeText text={this.state.lyrics} />\n  //           <CustomButton\n  //             style={{ marginTop: 40, marginBottom: 70 }}\n  //             title=\"Open Lyrics on Genius\"\n  //             onClick={() => this.openLyrics()}\n  //           />\n  //         </div>\n  //       )}\n  //     </Container>\n  //   );\n  // }\n}\n\nexport default Player;\n","import React from \"react\";\nimport \"./CustomButton.css\";\n\ninterface PropsType {\n  title: string;\n  onClick: Function;\n  style?: any;\n}\n\nclass CustomButton extends React.Component<PropsType, any> {\n  render() {\n    return (\n      <button style={this.props.style} className=\"sll-button\" onClick={(e) => this.props.onClick()}>\n        {this.props.title}\n      </button>\n    );\n  }\n}\n\nexport default CustomButton;\n","import React from \"react\";\n\ninterface PropsType {\n  title: string;\n}\n\nclass Header extends React.Component<PropsType, any> {\n  render() {\n    return <h1>{this.props.title}</h1>;\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./LargeText.css\";\n\ninterface PropsType {\n  fontWeight?: any;\n  text: string;\n}\n\nclass LargeText extends React.Component<PropsType, any> {\n  render() {\n    return (\n      <div className=\"sll-large-text\" style={{ fontWeight: this.props.fontWeight ? this.props.fontWeight : \"normal\" }}>\n        {this.props.text}\n      </div>\n    );\n  }\n}\n\nexport default LargeText;\n","import React from \"react\";\nimport { SpotifyService } from \"../api/SpotifyService\";\nimport Container from \"../components/Container\";\nimport CustomButton from \"../components/CustomButton\";\nimport Header from \"../components/Header\";\nimport LargeText from \"../components/LargeText\";\n\nclass Welcome extends React.Component {\n  login() {\n    SpotifyService.login();\n  }\n\n  render() {\n    return (\n      <Container>\n        <Header title=\"Spotify Live Lyrics\" />\n        <LargeText text=\"Welcome to Spotify Live Lyrics.\" />\n        <br />\n        <LargeText\n          text={\n            \"To get stared, you need to log in with your Spotify account in order to let the application know, which song you're currently listening to. No, worries, we never log or save this data.\"\n          }\n        />\n        <br />\n        <LargeText text=\"In fact, this project is open-sourced and the code can be seen on GitHub.\" />\n        <br />\n        <LargeText fontWeight={\"600\"} text=\"To get started with Spotify Live Lyrics, please log in!\" />\n        <br />\n        <CustomButton title=\"Log in with Spotify\" onClick={() => this.login()} />\n      </Container>\n    );\n  }\n}\n\nexport default Welcome;\n","import React from \"react\";\nimport { AuthUtils } from \"./utils/AuthUtils\";\nimport Player from \"./pages/Player\";\nimport Welcome from \"./pages/Welcome\";\nimport { SpotifyService } from \"./api/SpotifyService\";\n\ninterface StateType {\n  auth: boolean;\n}\n\nclass App extends React.Component<any, StateType> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      auth: false,\n    };\n  }\n\n  componentDidMount() {\n    this.getAuth();\n  }\n\n  async getAuth() {\n    if (await AuthUtils.getToken()) {\n      this.setState({ auth: true });\n    } else {\n      SpotifyService.onLoad();\n    }\n  }\n\n  render() {\n    return this.state.auth ? <Player /> : <Welcome />;\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}